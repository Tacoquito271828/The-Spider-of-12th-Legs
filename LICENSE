#                   ..        ::
#             .-   +.          .+   --
#             *.  .=            =:  .*
#     .       *.  =.    :  :    .+.  +      =:
#     =.     .+   *     *-.#.    +   =-     :+
#    .*.     .+:  :=   :#. +=   ==  :+.     -=
#     :*.      +:  .--:+###%*-==:  :=      --
#      :+       ==----%%%%%%%%+--==-     .-*
# :.    :=---:.::----=#%%%%%%%+-====-:=+=-:     .-.
#--          :=-.   .+%%%%%%%%#=.  .::.          -+
#==            .-=-+%%%%%%%%%%%%%*==-.          :*.
# ==        :==-. .#%%%%%%#%%%%%%#. .-+=:::--:::*-
#  +=----==+-.  :=+%%%%%%%%%%%%%%%*=:  .-:.  ..:-.
#           :===: .%%%%%%%%%%%%%%# .:===-
#          =+.   :=:+%%%%%%%%%%#-:+:   .++.
#        :+:   -+-   .=#%%%%%*-    -*:   :+=.
#     .-+-     ++       .-=-.      .#=     :++.
#     -*.      =+                   #=      -*
#      +-      +=                   ++     .=.
#      .*.    .#-                   :#.    .*
#       *:    .#-                   =+     :#.
#       ==.    .+=                 +-    .:+-
#        .::.    =+               =-    .::
#                 *=             :*
#                  --:        .:=-.
# ~ The Spider


import shutil
import urllib.request
from datetime import datetime

import havoc
import havocui
import os

#spiderfoot_path = os.system("locate /sf.py")
spiderfoot_path = "/opt/Havoc/data/extensions/Test-SF/spiderfoot-4.0/sf.py"

BAKER_ENCRYPT_TECHNIQUES = ["sfp_accounts", "sfp_spider", "sfp_names", "sfp_email"]
#MODULES_AVAILABLE = []
#all_all_modules =

# Variables & Defaults
default_module = "sfp_accounts"
target = "Miyako Yakota"
all_modules = ""

# Colors
HAVOC_ERROR = "#ff5555"  # Red
HAVOC_SUCCESS = "#50fa7b"  # Green
HAVOC_COMMENT = "#6272a4"  # Greyish blue
HAVOC_DARK = "#555766"  # Dark Grey
HAVOC_INFO = "#8be9fd"  # Cyan
HAVOC_WARNING = "#ffb86c"  # Orange

# Creates logs
Create dialog and log widget
dialog = havocui.Dialog("The Spider of 12th legs", True, 670, 400)
log = havocui.Logger("The Spiderfoot Module")


####################################################################################################################################################################


def installation():
    os.system("wget https://github.com/smicallef/spiderfoot/archive/v4.0.tar.gz")
    os.system("tar zxvf v4.0.tar.gz")
    os.system("cd spiderfoot-4.0")
    os.system("pip3 install -r requirements.txt")

def change_default_target(T):
    global target
    target = T
    print("[*] Target changed: ", target)

def change_default_module_to_use(num):
    global default_module
    if num:
        default_module = BAKER_ENCRYPT_TECHNIQUES[num - 1]
    else:
        default_module = "sfp_accounts"
    print("[*] Default module changed: ", default_module)


def change_default_all_modules(M):
    global all_modules
    all_modules = M
    print("[*] Modules changed: ", all_modules)


# Start search
def Link_Start():
    def get_build_command() -> str:
        global target
        if all_modules == "":
            global default_module
            base_cmd = "python3 " + spiderfoot_path + " -m " + default_module + " -s " + target + " -q"
        elif all_modules == "all":
            global all_all_modules
            base_cmd = "python3 " + spiderfoot_path + " -m " + all_all_modules + " -s " + target + " -q"
        else:
            global all_modules
            base_cmd = "python3 " + spiderfoot_path + " -m " + all_modules + " -s " + target + " -q"

        print(f"[+] Command to be run: {base_cmd}")
        return base_cmd

    def execute():
        log.addText(f"[<span style=\"color:{HAVOC_INFO};\">*</span>] Preparing to find all human targets...")
        cmd = get_build_command()

        os.system(cmd)

        # Create Log
        log.addText(f"Command has been be executed")
        log.addText(f"Check client log to see the output")
        log.addText(
            f"<b style=\"color:{HAVOC_SUCCESS};\">Spiderfoot should be running in your system, see XXXXXXX to read their finds. Happy Doxxing</b>")
        log.setBottomTab()

    log.setBottomTab()
    log.addText(
        f"<b style=\"color:{HAVOC_DARK};\">───────────────────────────────────────── running spiderfoot ─────────────────────────────────────────</b>")
    log.addText(f"<b style=\"color:{HAVOC_COMMENT};\">{datetime.now().strftime('%d/%m/%Y %H:%M:%S')} </b>")

    execute()
    dialog.close()


def SpiderFootConfiguration():
    def build():
        dialog.clear()

        # Get Listeners
        #global listeners
        #listeners = havoc.GetListeners()

        # Build Dialog
        dialog.addLabel(f"<b>──────────────────────────── Required Settings for SpiderFoot ─────────────────────────────</b>")
        #dialog.addButton("Choose shellcode", baker_change_shellcode_path)
        #dialog.addLabel(baker_label_to_replace)

        dialog.addLabel("<b>[*] Module to use (Just select one or use the next field if more than one required)</b>")
        dialog.addCombobox(change_default_module_to_use, "sfp_accounts", *BAKER_ENCRYPT_TECHNIQUES)

        dialog.addLabel("<b>[*] Modules to use (Comma separeted), or put 'all' to use all available modules</b>")
        dialog.addLineedit("Example. sfp_accounts,sfp_spider", change_default_all_modules)

        dialog.addLabel("<b>[*] Target to doxx</b>")
        dialog.addLineedit("e.g. Miyako Yakota", change_default_target)

        dialog.addButton("Link Start", Link_Start)
        dialog.exec()

    build()


if not os.path.exists(spiderfoot_path):
    install()


# Create Tab
havocui.createtab("The Spider", "Spider", SpiderFootConfiguration)
